{"version":3,"sources":["connect.js","components/Balance/Balance.jsx","utils.js","components/Balance/BalanceETH.jsx","components/Balance/BalanceWETH.jsx","const.js","components/Chain/ChainName.jsx","pages/LandingPage.jsx","components/Swap/ToWETH.jsx","components/Swap/ToETH.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","Balance","name","balance","formatAmount","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","BalanceETH","useWeb3React","account","library","chainId","React","useState","setBalance","useEffect","stale","getBalance","then","catch","undefined","format","formatEther","BalanceWETH","connector","myContract","Contract","ABI","getSigner","a","console","log","balanceOf","balanceHex","BigNumber","bigNumber","from","_hex","balanceWETH","toString","ABI_ERC20","SMART_CONTRACT_ADDRESS","CHAIN_LIST","ChainName","LandingPage","web3ReactContext","activate","active","deactivate","error","isAuthorized","on","accounts","code","reason","Container","Row","className","Col","Button","onClick","ToWETH","web3Context","amount","setAmount","onSubmitWithoutWETH","e","preventDefault","amountSent","String","Number","withdraw","tx","wait","Form","onSubmit","Group","Control","type","placeholder","value","onChange","target","ToETH","onSubmitDepositETH","deposit","parseEther","Home","activatingConnector","setActivatingConnector","contract","fromMe","filters","Transfer","to","event","toMe","toWETH","Deposit","toETH","Withdrawal","removeAllListeners","getLibrary","provider","Web3Provider","pollingInterval","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a1f43f1.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42] })\n\n\nexport const walletconnect = new WalletConnectConnector({\n\trpc: {\n\t\t1: \"https://mainnet.infura.io/v3/c9f9eba874a24d339db4c886f6964321\",\n\t\t4: \"https://rinkeby.infura.io/v3/c9f9eba874a24d339db4c886f6964321\"\n\t},\n\tqrcode: true\n})\n","import React from \"react\";\n\nexport default function Balance({ name, balance }) {\n\treturn (\n\t\t<div>\n\t\t\t{name} balance ðŸ’°: {balance}\n\t\t</div>\n\t);\n}\n","export const formatAmount = new Intl.NumberFormat('en-US', {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 4,\n});","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport Balance from \"./Balance\";\nimport { formatAmount } from \"../../utils\";\n\nexport default function BalanceETH() {\n\tconst { account, library, chainId } = useWeb3React();\n\tconst [balance, setBalance] = React.useState();\n\n\tuseEffect(() => {\n\t\tif (!!account && !!library) {\n\t\t\tlet stale = false;\n\n\t\t\tlibrary\n\t\t\t\t.getBalance(account)\n\t\t\t\t.then((balance) => {\n\t\t\t\t\tif (!stale) {\n\t\t\t\t\t\tsetBalance(balance);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tif (!stale) {\n\t\t\t\t\t\tsetBalance(null);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tstale = true;\n\t\t\t\tsetBalance(undefined);\n\t\t\t};\n\t\t}\n\t}, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n\treturn (\n\t\t<Balance\n\t\t\tname={\"ETH\"}\n\t\t\tbalance={balance ? formatAmount.format(formatEther(balance)) : \"\"}\n\t\t/>\n\t);\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport ABI from \"./../../ABI.json\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Balance from \"./Balance\";\nimport { formatAmount } from \"../../utils\";\n\nexport default function BalanceWETH() {\n\tconst { account, library, chainId, connector } = useWeb3React();\n\tconst [balance, setBalance] = useState();\n\tconst SMART_CONTRACT_ADDRESS = \"0xc778417E063141139Fce010982780140Aa0cD5Ab\";\n\n\tuseEffect(() => {\n\t\tif (!!account && !!library) {\n\t\t\tconst myContract = new Contract(\n\t\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\t\tABI,\n\t\t\t\tlibrary.getSigner()\n\t\t\t);\n\t\t\t(async function () {\n\t\t\t\tconsole.log(`Address Smart Contract: `, myContract, account);\n\t\t\t\tconst balanceHex = await myContract.balanceOf(account);\n\t\t\t\tsetBalance(balanceHex);\n\t\t\t\tconsole.log(`object`, balanceHex, BigNumber);\n\t\t\t\t// BigNumber.set({ DECIMAL_PLACES: 5 })\n\t\t\t\tconst bigNumber = BigNumber.from(balanceHex._hex);\n\t\t\t\tconst balanceWETH = bigNumber;\n\t\t\t\tconsole.log(`balanceWETH`, balanceWETH.toString());\n\t\t\t})();\n\t\t\treturn () => {\n\t\t\t\tsetBalance(undefined);\n\t\t\t};\n\t\t}\n\t}, [account, library, chainId, connector]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n\treturn (\n\t\t<Balance\n\t\t\tname={\"WETH\"}\n\t\t\tbalance={balance ? formatAmount.format(formatEther(balance)) : \"\"}\n\t\t/>\n\t);\n}\n","import ABI from './ABI.json';\n\nexport const ABI_ERC20 = ABI;\n\nexport const SMART_CONTRACT_ADDRESS = \"0xc778417E063141139Fce010982780140Aa0cD5Ab\";\n\nexport const CHAIN_LIST = {\n  1: \"Ethereum\",\n  2: \"Morden (disused), Expanse mainnet\",\n  3: \"Ropsten\",\n  4: \"Rinkeby\",\n  5: \"Goerli\"\n}","import { useWeb3React } from \"@web3-react/core\";\nimport React from \"react\";\nimport { CHAIN_LIST } from \"../../const\";\n\nexport default function ChainName() {\n\tconst { chainId } = useWeb3React();\n\treturn <div>Network : {chainId ? CHAIN_LIST[chainId] : \"\"}</div>;\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { walletconnect, injected } from \"../connect\";\n\nexport default function LandingPage() {\n\tconst web3ReactContext = useWeb3React();\n\tconst {\n\t\tconnector,\n\t\tlibrary,\n\t\tchainId,\n\t\taccount,\n\t\tactivate,\n\t\tdeactivate,\n\t\tactive,\n\t\terror,\n\t} = web3ReactContext;\n\n\t// Default auto connect network\n\tuseEffect(() => {\n\t\tinjected\n\t\t\t.isAuthorized()\n\t\t\t.then((isAuthorized) => {\n\t\t\t\t// setLoaded(true)\n\t\t\t\tif (isAuthorized && !active && !error) {\n\t\t\t\t\tactivate(injected);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\t// setLoaded(true)\n\t\t\t});\n\t}, [activate, active, error]);\n\n\t// Subscribe to accounts change\n\tlibrary &&\n\t\tlibrary.on(\"accountsChanged\", (accounts) => {\n\t\t\tconsole.log(accounts);\n\t\t});\n\n\t// Subscribe to chainId change\n\tlibrary &&\n\t\tlibrary.on(\"connect\", (chainId) => {\n\t\t\tconsole.log(chainId);\n\t\t});\n\n\t// Subscribe to session disconnection\n\tlibrary &&\n\t\tlibrary.on(\"disconnect\", (code, reason) => {\n\t\t\tconsole.log(code, reason);\n\t\t});\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<h2>Connect with ...</h2>\n\t\t\t</Row>\n\t\t\t<Row className=\"text-center\">\n\t\t\t\t<Col>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tactivate(walletconnect);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWalletConnect\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tactivate(injected);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tMetaMask\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { ABI_ERC20, SMART_CONTRACT_ADDRESS } from \"../../const\";\nimport { Container, Col, Row, Form, Input, Button } from \"react-bootstrap\";\n\nexport default function ToWETH() {\n\tconst web3Context = useWeb3React();\n\tconst { library, account } = web3Context;\n\tconst [amount, setAmount] = useState(\"\");\n\n\tconst onSubmitWithoutWETH = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst myContract = new Contract(\n\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\tABI_ERC20,\n\t\t\tlibrary.getSigner()\n\t\t);\n\t\tconst amountSent = String(Number(amount) * 10 ** 18);\n\t\tconst tx = await myContract.withdraw(amountSent);\n\t\tdebugger;\n\t\tawait tx.wait();\n\t\tdebugger;\n\t};\n\n\tconst onChangeAmount = (e) => {\n\t\tsetAmount(e.target.value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form onSubmit={onSubmitWithoutWETH}>\n\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\tplaceholder={\"Input amount\"}\n\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\tonChange={onChangeAmount}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button type=\"submit\">Without WETH</Button>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useState } from \"react\";\nimport { parseUnits, parseEther } from \"@ethersproject/units\";\nimport ABI from \"../../ABI.json\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { ABI_ERC20, SMART_CONTRACT_ADDRESS } from \"../../const\";\nimport { Button, Container, Row, Col, Form, Input } from \"react-bootstrap\";\n\nexport default function ToETH() {\n\tconst web3Context = useWeb3React();\n\tconst { library, account } = web3Context;\n\tconst [amount, setAmount] = useState(\"\");\n\n\tconst onSubmitDepositETH = async (e) => {\n\t\t//\n\t\te.preventDefault();\n\n\t\tconst myContract = new Contract(\n\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\tABI_ERC20,\n\t\t\tlibrary.getSigner()\n\t\t);\n\t\tconst tx = await myContract.deposit({ value: parseEther(amount) });\n\t\tdebugger;\n\t\tconst log = await tx.wait();\n\t\tconsole.log(`log`, log);\n\t\tdebugger;\n\t};\n\tconst onSubmitTransferWETH = async (e) => {\n\t\t//\n\t\te.preventDefault();\n\n\t\tconst myContract = new Contract(\n\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\tABI,\n\t\t\tlibrary.getSigner()\n\t\t);\n\t\tconst amountSent = parseUnits(amount);\n\t\tconst tx = await myContract.transfer(\n\t\t\t\"0x399C3A3b0fa0Cc447869Ee815475d26264D44804\",\n\t\t\tamountSent\n\t\t);\n\t\tdebugger;\n\t\tawait tx.wait();\n\t\tdebugger;\n\t};\n\n\tconst onChangeAmount = (e) => {\n\t\tsetAmount(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"justify-content-center\">\n\t\t\t<Form onSubmit={onSubmitDepositETH}>\n\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\tplaceholder={\"Input amount\"}\n\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\tonChange={onChangeAmount}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button type=\"submit\">Deposit ETH</Button>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\t\t\t{/* <form onSubmit={onSubmitTransferWETH}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder={\"Input amount\"}\n\t\t\t\t\tvalue={amount}\n\t\t\t\t\tonChange={onChangeAmount}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">Transfer WETH</Button>\n\t\t\t</form> */}\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport BalanceETH from \"../components/Balance/BalanceETH\";\nimport BalanceWETH from \"../components/Balance/BalanceWETH\";\nimport { ABI_ERC20, SMART_CONTRACT_ADDRESS } from \"../const\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport ChainName from \"../components/Chain/ChainName\";\nimport LandingPage from \"./LandingPage\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ToWETH from \"../components/Swap/ToWETH\";\nimport ToETH from \"../components/Swap/ToETH\";\n\nexport default function Home() {\n\tconst web3ReactContext = useWeb3React();\n\tconst {\n\t\tconnector,\n\t\tlibrary,\n\t\tchainId,\n\t\taccount,\n\t\tactivate,\n\t\tdeactivate,\n\t\tactive,\n\t\terror,\n\t} = web3ReactContext;\n\n\tconst [activatingConnector, setActivatingConnector] = useState();\n\n\tuseEffect(() => {\n\t\tif (activatingConnector && activatingConnector === connector) {\n\t\t\tsetActivatingConnector(undefined);\n\t\t}\n\t}, [activatingConnector, connector]);\n\n\tuseEffect(() => {\n\t\t// listen for changes on an Ethereum address\n\t\tif (library) {\n\t\t\t// library.on(\"block\", () => {\n\t\t\t// \tconsole.log(\"update balance...\");\n\t\t\t// });\n\n\t\t\tconsole.log(`listening for Transfer...`);\n\t\t\tconst contract = new Contract(\n\t\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\t\tABI_ERC20,\n\t\t\t\tlibrary.getSigner()\n\t\t\t);\n\t\t\tconst fromMe = contract.filters.Transfer(account, null);\n\t\t\tlibrary.on(fromMe, (from, to, amount, event) => {\n\t\t\t\tconsole.log(\"Transfer|sent\", { from, to, amount, event });\n\t\t\t});\n\t\t\tconst toMe = contract.filters.Transfer(null, account);\n\t\t\tlibrary.on(toMe, (from, to, amount, event) => {\n\t\t\t\tconsole.log(\"Transfer|received\", { from, to, amount, event });\n\t\t\t});\n\n\t\t\tconst toWETH = contract.filters.Deposit(\n\t\t\t\t\"0xC5FEdBD978E30862957637f32C53E92184E40835\"\n\t\t\t);\n\t\t\tcontract.on(toWETH, (from, amount, event) => {\n\t\t\t\tconsole.log(\"Deposit\", { from, amount, event });\n\t\t\t});\n\n\t\t\tconst toETH = contract.filters.Withdrawal(\n\t\t\t\t\"0xC5FEdBD978E30862957637f32C53E92184E40835\"\n\t\t\t);\n\t\t\tcontract.on(toETH, (from, amount, event) => {\n\t\t\t\tconsole.log(\"Withdrawal\", { from, amount, event });\n\t\t\t});\n\n\t\t\t// remove listener when the component is unmounted\n\t\t\treturn () => {\n\t\t\t\tlibrary.removeAllListeners(toMe);\n\t\t\t\tlibrary.removeAllListeners(fromMe);\n\t\t\t};\n\t\t}\n\t\t// trigger the effect only on component mount\n\t}, [library]);\n\n\tif (!web3ReactContext.active && !web3ReactContext.error) {\n\t\t// loading\n\t\tconsole.log(`loading: `, web3ReactContext);\n\t} else if (web3ReactContext.error) {\n\t\t//error\n\t\tconsole.log(`error: `, web3ReactContext);\n\t} else {\n\t\t// success\n\t\tconsole.log(`success: `, web3ReactContext);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{library ? (\n\t\t\t\t<Container>\n\t\t\t\t\t<h1>Home page</h1>\n\t\t\t\t\t<div>Account: {account}</div>\n\t\t\t\t\t<ChainName />\n\t\t\t\t\t<BalanceETH />\n\t\t\t\t\t<BalanceWETH />\n\t\t\t\t\t<ToWETH />\n\t\t\t\t\t<ToETH />\n\t\t\t\t</Container>\n\t\t\t) : (\n\t\t\t\t<LandingPage />\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import \"./App.css\";\nimport connectors from \"./connect\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Home from \"./pages/Home\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider, connector) {\n\tconst library = new Web3Provider(provider);\n\tlibrary.pollingInterval = 12000;\n\treturn library; // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nfunction App() {\n\treturn (\n\t\t<Web3ReactProvider getLibrary={getLibrary}>\n\t\t\t<Home />\n\t\t</Web3ReactProvider>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}