{"version":3,"sources":["connect.js","const.js","components/Chain/ChainName.jsx","pages/LandingPage.jsx","components/Swap/ToDetail.jsx","components/Swap/ToWETH.jsx","components/Swap/ToETH.jsx","utils.js","components/Balance/Balance.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","ABI_ERC20","SMART_CONTRACT_ADDRESS","CHAIN_LIST","ChainName","chainId","useWeb3React","LandingPage","web3ReactContext","activate","connector","library","account","active","deactivate","error","useState","loaded","setLoaded","useEffect","isAuthorized","then","catch","finally","Container","style","maxWidth","Row","Col","className","Button","onClick","ToDetail","txDetail","hash","variant","done","e","window","open","ToWETH","web3Context","amount","setAmount","setTxDetail","onSubmitDepositETH","a","preventDefault","myContract","Contract","getSigner","deposit","value","parseEther","tx","wait","logs","preV","status","Card","Header","Body","Form","onSubmit","Group","Control","type","min","step","max","placeholder","onChange","target","ToETH","onSubmitWithdrawWETH","amountSent","String","Number","withdraw","formatAmount","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","Balance","name","balance","balanceRender","format","formatEther","Home","balanceETH","setBalanceETH","balanceWETH","setBalanceWETH","getBalanceETH","getBalance","undefined","getBalanceWETH","balanceOf","balanceHex","contract","toWETH","filters","Deposit","on","from","event","toETH","Withdrawal","removeAllListeners","size","getLibrary","provider","Web3Provider","pollingInterval","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.956895d9.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42] })\n\n\nexport const walletconnect = new WalletConnectConnector({\n\trpc: {\n\t\t1: \"https://mainnet.infura.io/v3/c9f9eba874a24d339db4c886f6964321\",\n\t\t4: \"https://rinkeby.infura.io/v3/c9f9eba874a24d339db4c886f6964321\"\n\t},\n\tqrcode: true\n})\n","import ABI from './ABI.json';\n\nexport const ABI_ERC20 = ABI;\n\nexport const SMART_CONTRACT_ADDRESS = \"0xc778417E063141139Fce010982780140Aa0cD5Ab\";\n\nexport const CHAIN_LIST = {\n  1: \"Ethereum\",\n  2: \"Morden (disused), Expanse mainnet\",\n  3: \"Ropsten\",\n  4: \"Rinkeby\",\n  5: \"Goerli\"\n}","import { useWeb3React } from \"@web3-react/core\";\nimport React from \"react\";\nimport { CHAIN_LIST } from \"../../const\";\n\nexport default function ChainName() {\n\tconst { chainId } = useWeb3React();\n\treturn (\n\t\t<div>\n\t\t\tNetwork : <b>{chainId ? CHAIN_LIST[chainId] : \"\"}</b>\n\t\t</div>\n\t);\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { walletconnect, injected } from \"../connect\";\n\nexport default function LandingPage() {\n\tconst web3ReactContext = useWeb3React();\n\tconst {\n\t\tconnector,\n\t\tlibrary,\n\t\tchainId,\n\t\taccount,\n\t\tactivate,\n\t\tdeactivate,\n\t\tactive,\n\t\terror,\n\t} = web3ReactContext;\n\tconst [loaded, setLoaded] = useState(true);\n\n\t// Default auto connect network\n\tuseEffect(() => {\n\t\tsetLoaded(true);\n\t\tinjected\n\t\t\t.isAuthorized()\n\t\t\t.then((isAuthorized) => {\n\t\t\t\tif (isAuthorized && !active && !error) {\n\t\t\t\t\tactivate(injected);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => {})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoaded(false);\n\t\t\t});\n\t}, [activate, active, error]);\n\n\treturn (\n\t\t!loaded && (\n\t\t\t<Container\n\t\t\t\tstyle={{\n\t\t\t\t\tmaxWidth: \"610px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h2>Connect with ...</h2>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"justify-content-center g-4\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tactivate(walletconnect);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWalletConnect\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tactivate(injected);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tMetaMask\n\t\t\t\t\t</Button>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t);\n}\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function ToDetail({ txDetail }) {\n\tconst onClickShowDetail = (e) => {\n\t\twindow.open(\"https://rinkeby.etherscan.io/tx/\" + txDetail.hash, \"_blank\");\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{txDetail.hash && (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"ms-3\"\n\t\t\t\t\tvariant={txDetail.done ? \"success\" : \"primary\"}\n\t\t\t\t\tonClick={onClickShowDetail}\n\t\t\t\t>\n\t\t\t\t\tTransaction Details\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useState } from \"react\";\nimport { parseUnits, parseEther } from \"@ethersproject/units\";\nimport ABI from \"../../ABI.json\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { ABI_ERC20, SMART_CONTRACT_ADDRESS } from \"../../const\";\nimport { Button, Card, Row, Col, Form, Input } from \"react-bootstrap\";\nimport ToDetail from \"./ToDetail\";\n\nexport default function ToWETH() {\n\tconst web3Context = useWeb3React();\n\tconst { library, account } = web3Context;\n\tconst [amount, setAmount] = useState(\"\");\n\tconst [txDetail, setTxDetail] = useState({\n\t\thash: null,\n\t\tdone: false,\n\t});\n\n\tconst onSubmitDepositETH = async (e) => {\n\t\t//\n\t\te.preventDefault();\n\n\t\tconst myContract = new Contract(\n\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\tABI_ERC20,\n\t\t\tlibrary.getSigner()\n\t\t);\n\t\t// Sent\n\t\tconst tx = await myContract.deposit({ value: parseEther(amount) });\n\t\tsetTxDetail({ ...txDetail, hash: tx.hash, done: false });\n\n\t\t// response\n\t\tconst logs = await tx.wait();\n\t\tsetTxDetail((preV) => ({ ...preV, done: logs.status === 1 }));\n\t};\n\n\tconst onChangeAmount = (e) => {\n\t\tsetAmount(e.target.value);\n\t};\n\n\treturn (\n\t\t<Card className=\"mt-3\">\n\t\t\t<Card.Header>Deposit ETH</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Form onSubmit={onSubmitDepositETH}>\n\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\tstep=\"0.0000000000001\"\n\t\t\t\t\t\t\tmax={amount}\n\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t\tplaceholder={\"Input amount\"}\n\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\tonChange={onChangeAmount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"submit\">Wrap</Button>\n\t\t\t\t\t\t<ToDetail txDetail={txDetail} />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t</Form>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n","import { useWeb3React } from \"@web3-react/core\";\nimport React, { useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { ABI_ERC20, SMART_CONTRACT_ADDRESS } from \"../../const\";\nimport { Card, Col, Row, Form, Input, Button } from \"react-bootstrap\";\nimport ToDetail from \"./ToDetail\";\n\nexport default function ToETH() {\n\tconst web3Context = useWeb3React();\n\tconst { library, account } = web3Context;\n\tconst [amount, setAmount] = useState(\"\");\n\tconst [txDetail, setTxDetail] = useState({\n\t\thash: null,\n\t\tdone: false,\n\t});\n\n\tconst onSubmitWithdrawWETH = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst myContract = new Contract(\n\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\tABI_ERC20,\n\t\t\tlibrary.getSigner()\n\t\t);\n\t\tconst amountSent = String(Number(amount) * 10 ** 18);\n\t\t// Sent\n\t\tconst tx = await myContract.withdraw(amountSent);\n\t\tsetTxDetail({ ...txDetail, hash: tx.hash, done: false });\n\n\t\t// response\n\t\tconst logs = await tx.wait();\n\t\tsetTxDetail((preV) => ({ ...preV, done: logs.status === 1 }));\n\t};\n\n\tconst onChangeAmount = (e) => {\n\t\tsetAmount(e.target.value);\n\t};\n\n\treturn (\n\t\t<Card className=\"mt-3\">\n\t\t\t<Card.Header>Withdraw WETH</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Form onSubmit={onSubmitWithdrawWETH}>\n\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\tstep=\"0.0000000000001\"\n\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t\tplaceholder={\"Input amount\"}\n\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\tonChange={onChangeAmount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"submit\">Unwrap</Button>\n\t\t\t\t\t\t<ToDetail txDetail={txDetail} />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t</Form>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n","export const formatAmount = new Intl.NumberFormat('en-US', {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 4,\n});","import { formatEther } from \"@ethersproject/units\";\nimport React from \"react\";\nimport { formatAmount } from \"../../utils\";\n\nexport default function Balance({ name, balance }) {\n\tconst balanceRender =\n\t\tbalance === null ? \"...\" : formatAmount.format(formatEther(balance));\n\treturn (\n\t\t<div>\n\t\t\t{name} balance : <b>{balanceRender}</b> {name}\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { ABI_ERC20, SMART_CONTRACT_ADDRESS } from \"../const\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport ChainName from \"../components/Chain/ChainName\";\nimport LandingPage from \"./LandingPage\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport ToWETH from \"../components/Swap/ToWETH\";\nimport ToETH from \"../components/Swap/ToETH\";\nimport { injected } from \"../connect\";\nimport Balance from \"../components/Balance/Balance\";\n\nexport default function Home() {\n\tconst web3ReactContext = useWeb3React();\n\tconst {\n\t\tconnector,\n\t\tlibrary,\n\t\tchainId,\n\t\taccount,\n\t\tactivate,\n\t\tdeactivate,\n\t\tactive,\n\t\terror,\n\t} = web3ReactContext;\n\tconst [balanceETH, setBalanceETH] = useState(null);\n\tconst [balanceWETH, setBalanceWETH] = useState(null);\n\n\tconst getBalanceETH = () => {\n\t\t// ETH\n\t\tlibrary\n\t\t\t.getBalance(account)\n\t\t\t.then((balance) => {\n\t\t\t\tsetBalanceETH(balance);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetBalanceETH(null);\n\t\t\t});\n\n\t\treturn () => {\n\t\t\tsetBalanceETH(undefined);\n\t\t};\n\t};\n\n\tconst getBalanceWETH = () => {\n\t\t// Wrap ETH\n\t\tconst myContract = new Contract(\n\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\tABI_ERC20,\n\t\t\tlibrary.getSigner()\n\t\t);\n\t\t(async function () {\n\t\t\tconst balanceHex = await myContract.balanceOf(account);\n\t\t\tsetBalanceWETH(balanceHex);\n\t\t})();\n\t\treturn () => {\n\t\t\tsetBalanceWETH(undefined);\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tif (!!account && !!library) {\n\t\t\tgetBalanceETH();\n\t\t\tgetBalanceWETH();\n\t\t}\n\t\treturn () => {\n\t\t\tsetBalanceETH(null);\n\t\t\tsetBalanceWETH(null);\n\t\t};\n\t}, [account, library, chainId]);\n\n\t// Setup init: Listen deposit, withdrawal\n\tuseEffect(() => {\n\t\tif (library) {\n\t\t\tconst contract = new Contract(\n\t\t\t\tSMART_CONTRACT_ADDRESS,\n\t\t\t\tABI_ERC20,\n\t\t\t\tlibrary.getSigner()\n\t\t\t);\n\n\t\t\tconst toWETH = contract.filters.Deposit(account);\n\t\t\tcontract.on(toWETH, (from, amount, event) => {\n\t\t\t\t// console.log(\"Deposit\", { from, amount, event });\n\t\t\t\tgetBalanceETH();\n\t\t\t\tgetBalanceWETH();\n\t\t\t});\n\n\t\t\tconst toETH = contract.filters.Withdrawal(account);\n\t\t\tcontract.on(toETH, (from, amount, event) => {\n\t\t\t\t// console.log(\"Withdrawal\", { from, amount, event });\n\t\t\t\tgetBalanceETH();\n\t\t\t\tgetBalanceWETH();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tlibrary.removeAllListeners(toETH);\n\t\t\t\tlibrary.removeAllListeners(toWETH);\n\t\t\t};\n\t\t}\n\t}, [library]);\n\n\treturn (\n\t\t<>\n\t\t\t{library ? (\n\t\t\t\t<Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmaxWidth: \"610px\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h2>Home page</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tAccount: <b>{account}</b>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\tclassName=\"ms-3\"\n\t\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tactivate(null);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ChainName />\n\t\t\t\t\t<Balance name=\"ETH\" balance={balanceETH} />\n\t\t\t\t\t<Balance name=\"WETH\" balance={balanceWETH} />\n\t\t\t\t\t<ToWETH />\n\t\t\t\t\t<ToETH />\n\t\t\t\t</Container>\n\t\t\t) : (\n\t\t\t\t<LandingPage />\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import \"./App.css\";\nimport connectors from \"./connect\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Home from \"./pages/Home\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider, connector) {\n\tconst library = new Web3Provider(provider);\n\tlibrary.pollingInterval = 12000;\n\treturn library; // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nfunction App() {\n\treturn (\n\t\t<Web3ReactProvider getLibrary={getLibrary}>\n\t\t\t<Home />\n\t\t</Web3ReactProvider>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}